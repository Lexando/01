package main

import "fmt"

func main() {
	input := "-1"
	var result string
	ascii := map[int32]int32{ //Мапа ASCII (код:цифра)
		48: 0,
		49: 1,
		50: 2,
		51: 3,
		52: 4,
		53: 5,
		54: 6,
		55: 7,
		56: 8,
		57: 9,
	}
	var numbers []int32 //Ми перетворимо рядок на числа int32 у цьому зрізі, щоб можна було з ними робити математику.

	sAscii := []int32(input) //Заганяємо рядок у зріз int32, де всі символи стають кодами ASCII.

	var Space bool
	for _, v := range sAscii {
		if v == 32 { //Спочатку шукаємо пробіли (32), щоб визначити, чи не одне число на вході.
			Space = true
		}
	}

	if !Space { //Якщо немає пробілів, то число одне, його і виводимо в лапках, згідно умов задачі.
		result = "\"" + input + "\""
		print(result)
	} else { //Інакше, починається найцікавіше...

		var Sign int32 = 1  //Це знак числа ("1" - плюс, "-1" - мінус).
		var Digits []int32  //Проміжний зріз для запису розрядів числа (одиниці, десятки, сотні...).
		var ZeroN int32 = 1 //Множник для розрядів, приймає значення 1, 10, 100...
		var Num int32       //Тут буде формуватися модуль числа для додавання у numbers.

		for _, v := range sAscii { //Цикл перебиратиме усі коди ASCII в зрізі.

			if v == 32 { //Якщо натрапили на пробіл (32), то число закінчилося, скидаємо змінні до початкового стану
				Digits = make([]int32, 0)
				ZeroN = 1
				Num = 0
				Sign = 1
				continue // Йдемо вгору за кодом цифри після пробілу (новим v).
			}

			if v == 45 { //Запам'ятали мінус (45) і йдемо вгору за цифрою.
				Sign = -1
				continue
			}

			Digits = append(Digits, ascii[v]) //Визначаємо цифру з мапи і записуємо у тимчасовий зріз як розряд числа.
			Num = Num + Digits[0]*ZeroN       //Формуємо число згідно розрядів, додаючи одиниці, сотні, тисячі...
			ZeroN = ZeroN * 10                //Щоразу збільшуємо множник для наступного додавання, аж поки не зустрінемо пробіл.

			if Num < 10 {
				numbers = append(numbers, Num*Sign) // Якщо Num однорозрядний, то дописуємо його в наш масив.
			} else {
				numbers[len(numbers)-1] = Num * Sign // Якщо розрядів вже більше 1, то пишемо поточний Num у зріз поверх останнього елементу.
			}
		}

		var min, max int32 = numbers[0], numbers[0]

		for _, v := range numbers {
			if v > max {
				max = v
			}
			if v < min {
				min = v
			}
		}

		result = "\"" + fmt.Sprintf("%d %d", max, min) + "\"" //Конвертуємо max, min у рядок, додаємо лапки, як вимагається у задачі.
		fmt.Println(result)                                   //Друкуємо готовий result.
	}
}
